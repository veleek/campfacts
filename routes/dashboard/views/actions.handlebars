{{#> base title='CampFacts! Action Log' section='actions'}}
    {{#*inline "styles"}}
        <style>
        </style>
    {{/inline}}

    {{#*inline "content"}}
        <div id="action-buttons">
            <div class="form-inline">
                <button type="button" id="refresh-actions" class="btn btn-primary mr-2">Refresh</button>

                <div class="form-check mr-2">
                    <input class="form-check-input" type="checkbox", id="error-level-checkbox" value="error" checked>
                    <label class="form-check-label" for="error-level-checkbox">Error</label>
                </div>

                <div class="form-check mr-2">
                    <input class="form-check-input" type="checkbox", id="warn-level-checkbox" value="warn" checked>
                    <label class="form-check-label" for="warn-level-checkbox">Warning</label>
                </div>

                <div class="form-check mr-2">
                    <input class="form-check-input" type="checkbox", id="info-level-checkbox" value="info" checked>
                    <label class="form-check-label" for="info-level-checkbox">Info</label>
                </div>

                <div class="form-check mr-2">
                    <input class="form-check-input" type="checkbox", id="debug-level-checkbox" value="debug">
                    <label class="form-check-label" for="debug-level-checkbox">Debug</label>
                </div>

                <div class="form-check mr-2">
                    <input class="form-check-input" type="checkbox", id="verbose-level-checkbox" value="verbose">
                    <label class="form-check-label" for="verbose-level-checkbox">Verbose</label>
                </div>
            </div>
            
            <input class="form-control mt-2" id="filter-table-text" type="text" placeholder="Search...">
        </div>

        <div id="actions-table-wrapper" class="table-responsive">
            <table class="table table-striped table-hover table-sm" id="actions-table" style="min-width: 280px">
                <thead>
                    <tr>
                        <th scope="col" style="min-width:212px">Date</th>
                        <th scope="col" style="min-width:200px">Team</th>
                        <th scope="col">Level</th>
                        <th scope="col" style="min-width:500px">Action</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>

        <div id="after">
            <button type="button" id="load-more" class="btn btn-primary">Load More</button>
        </div>
    {{/inline}}

    {{#*inline "scripts"}}
        <script>
            $(document).ready(function()
            {
                var logsLoaded = 0;
                var count = 25;

                UpdateLogs();

                var showAlert = function(message, level = "danger")
                {
                    // Check for existing alert and fade it out if there is
                    var existingAlert = $("#alertPlaceholder div.alert:first-child");
                    if(existingAlert.length > 0)
                    {
                        setTimeout(function() { existingAlert.fadeOut(500, function() { existingAlert.remove()}); }, 5000);
                    }

                    var alertContent = `<div class="alert alert-${level} hidden" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        ${message}
                    </div>`;

                    $("#alertPlaceholder").prepend(alertContent);
                }

                var showAlertForAjaxFailure = function(xhr)
                {
                    if(xhr.status === 0)
                    {
                        message = "Unknown error."
                    }
                    else
                    {
                        message = `${xhr.statusText} (${xhr.status})`;
                        if(xhr.responseJSON && xhr.responseJSON.error)
                        {
                            message += ": " + xhr.responseJSON.error;
                        }
                        else if(xhr.responseText)
                        {
                            message += ": " + xhr.responseText;
                        }
                    }

                    showAlert(message);
                }
               
                $("#refresh-actions").on("click", function(event)
                {
                    logsLoaded = 0;
                    $("#actions-table > tbody").empty();
                    UpdateLogs();
                });

                $("#load-more").on("click", function(event)
                {
                    UpdateLogs();
                })

                function UpdateLogs()
                {
                    var levels = [];
                    $("#action-buttons .form-check-input").each(function() {
                        var checkbox = $(this)
                        if(checkbox.prop("checked"))
                        {
                            levels.push(checkbox.val());
                        }
                    });

                    

                    $.ajax({
                        type: "get",
                        url: `/logs?level=${levels.join(",")}&count=${count}&start=${logsLoaded}`,
                        dataType: "json"
                    })
                        .done(actions => {
                            var data = {
                                actions: actions,
                                showTeam: true
                            }
                            logsLoaded += count;
                            var result = Handlebars.partials["actions-table-rows"](data);
                            $("#actions-table > tbody").append(result);
                        })
                }

                $("#filter-table-text").on("keyup", function() 
                {
                    var value = $(this).val().toLowerCase();
                    $("#actions-table tbody tr").filter(
                        function() 
                        {
                            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                        }
                    );
                });

                {{{file "./views/_actions-table.js"}}}
                {{{file "./views/_actions-table-rows.js"}}}

                Handlebars.registerHelper('json', function(context) {
                    return JSON.stringify(context);
                });
            });
        </script>
    {{/inline}}
{{/base}}